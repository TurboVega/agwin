	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -3
	call	__frameset
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	call	_vdp_vdu_init
	call	_vdp_key_init
	ld	de, -1
	or	a, a
	sbc	hl, de
	jr	nz, BB0_2
	ld	hl, 1
	ld	(ix - 3), hl
	jr	BB0_3
BB0_2:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_vdp_mode
	pop	hl
	call	_vdp_clear_screen
	call	_vdp_clear_graphics
	or	a, a
	sbc	hl, hl
	push	hl
	call	_vdp_logical_scr_dims
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_vdp_cursor_enable
	pop	hl
	call	_vdp_context_save
	call	_core_initialize
	call	_core_message_loop
	call	_vdp_context_restore
	ld	hl, 1
	push	hl
	call	_vdp_cursor_enable
	pop	hl
BB0_3:
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_handle_message
_core_handle_message:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, _.str.7
	ld	de, (iy)
	ld	bc, 0
	ld	c, (iy + 3)
	push	bc
	push	de
	push	hl
	call	_printf
	ld	iy, (ix + 6)
	ld	e, 0
	pop	hl
	pop	hl
	pop	hl
	ld	a, (iy + 3)
	add	a, -2
	cp	a, 12
	jp	nc, BB1_19
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, a
	ld	hl, JTI1_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	jp	(hl)
BB1_2:
	ld	hl, (iy)
	ld	de, (iy + 4)
	ld	bc, (iy + 6)
	push	bc
	push	de
	push	hl
	call	_core_resize_window
	jr	BB1_4
BB1_3:
	ld	hl, (iy)
	ld	de, (iy + 4)
	ld	bc, (iy + 6)
	push	bc
	push	de
	push	hl
	call	_core_move_window
BB1_4:
	ld	e, 0
	pop	hl
	jr	BB1_13
BB1_5:
	ld	hl, (iy)
	push	hl
	call	_core_close_window
	jr	BB1_17
BB1_6:
	ld	hl, (iy)
	push	hl
	call	_core_destroy_window
	jr	BB1_17
BB1_7:
	ld	hl, (iy)
	ld	e, (iy + 4)
	push	de
	push	hl
	call	_core_show_window
	jr	BB1_12
BB1_8:
	ld	hl, (iy)
	ld	e, (iy + 4)
	push	de
	push	hl
	call	_core_enable_window
	jr	BB1_12
BB1_9:
	ld	hl, (iy)
	ld	e, (iy + 4)
	push	de
	push	hl
	call	_core_activate_window
	jr	BB1_12
BB1_10:
	ld	iy, (iy)
	ld	hl, (iy + 19)
	ld	a, e
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	(iy + 35), hl
	ld	(iy + 38), de
	ld	e, a
	ld	(iy + 41), c
	ld	(iy + 42), b
	jr	BB1_19
BB1_11:
	ld	hl, (iy)
	pea	iy + 4
	push	hl
	call	_core_invalidate_window_rect
BB1_12:
	ld	e, 0
BB1_13:
	pop	hl
	jr	BB1_18
BB1_14:
	push	iy
	call	_core_paint_window
	jr	BB1_17
BB1_15:
	ld	a, e
	ld	(_running), a
	jr	BB1_19
BB1_16:
	ld	hl, (iy + 4)
	push	hl
	call	_core_exit_app
BB1_17:
	ld	e, 0
BB1_18:
	pop	hl
BB1_19:
	ld	hl, 1
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI1_0
JTI1_0:
	dl	BB1_2
	dl	BB1_3
	dl	BB1_5
	dl	BB1_6
	dl	BB1_7
	dl	BB1_8
	dl	BB1_9
	dl	BB1_10
	dl	BB1_11
	dl	BB1_14
	dl	BB1_15
	dl	BB1_16

	section	.text,"ax",@progbits
	public	_core_resize_window
_core_resize_window:
	ld	hl, -38
	call	__frameset
	ld	hl, (ix + 6)
	push	hl
	pea	ix - 8
	call	_core_get_local_window_rect
	pop	hl
	pop	hl
	ld	bc, (ix + 6)
	push	bc
	pop	iy
	ld	hl, (iy + 19)
	ld	de, (ix + 9)
	add.sis	hl, de
	ld	(iy + 23), l
	ld	(iy + 24), h
	ld	hl, (iy + 21)
	ld	de, (ix + 12)
	add.sis	hl, de
	ld	(iy + 25), l
	ld	(iy + 26), h
	ld	hl, (ix - 8)
	ld	de, (ix - 6)
	push	de
	push	hl
	push	bc
	call	_core_move_window
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	(ix - 38), hl
	ld	(ix - 35), 120
	pea	ix - 38
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_move_window
_core_move_window:
	ld	hl, -48
	call	__frameset
	ld	iy, (ix + 6)
	ld.sis	bc, 4
	ld	iy, (iy + 3)
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_2
	ld.sis	hl, 0
	ld	(ix - 39), hl
	ld	(ix - 36), hl
	jp	BB3_3
BB3_2:
	ld	hl, (iy + 27)
	ld	de, (iy + 30)
	ld	bc, (iy + 33)
	ld	iy, 16
	push	iy
	ld	(ix - 36), hl
	call	__llshru
	ld.sis	bc, 4
	ld	(ix - 39), hl
	pop	hl
BB3_3:
	ld	iy, (ix + 6)
	ld	hl, (iy + 23)
	ld	de, (iy + 19)
	or	a, a
	sbc.sis	hl, de
	ld	(ix - 42), hl
	ld	hl, (iy + 25)
	ld	de, (iy + 21)
	or	a, a
	sbc.sis	hl, de
	ld	(ix - 33), hl
	ld	de, (iy + 43)
	ld	l, e
	ld	h, d
	call	__sand
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld	a, e
	ld.sis	de, 12
	add.sis	hl, de
	bit	3, a
	ld	e, iyl
	ld	d, iyh
	jr	z, BB3_5
	ld	e, l
	ld	d, h
BB3_5:
	ld	(ix - 48), de
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, -2
	call	__smulu
	ld	(ix - 45), hl
	ld	de, (ix + 9)
	ld	hl, (ix - 36)
	add.sis	hl, de
	ld	c, l
	ld	b, h
	ld	hl, (ix + 6)
	ld	(ix - 36), iy
	push	hl
	pop	iy
	ld	(iy + 19), c
	ld	(iy + 20), b
	ld	de, (ix + 12)
	ld	hl, (ix - 39)
	add.sis	hl, de
	ld	e, l
	ld	d, h
	ld	(iy + 21), e
	ld	(iy + 22), d
	ld	hl, (ix - 42)
	add.sis	hl, bc
	ld	(ix - 39), hl
	ld	(iy + 23), l
	ld	(iy + 24), h
	ld	hl, (ix - 33)
	add.sis	hl, de
	ld	(ix - 33), hl
	ld	(iy + 25), l
	ld	(iy + 26), h
	ld	hl, (ix - 36)
	add.sis	hl, bc
	ld	(iy + 27), l
	ld	(iy + 28), h
	ld	bc, (ix - 48)
	ld	l, c
	ld	h, b
	add.sis	hl, de
	ld	(iy + 29), l
	ld	(iy + 30), h
	ld	hl, (ix - 45)
	ld	de, (ix - 39)
	add.sis	hl, de
	ld	(iy + 31), l
	ld	(iy + 32), h
	ld	hl, (ix - 36)
	add.sis	hl, bc
	ld	e, l
	ld	d, h
	ld	hl, (ix - 33)
	or	a, a
	sbc.sis	hl, de
	ld	(iy + 33), l
	ld	(iy + 34), h
	ld	hl, (iy + 19)
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	(iy + 35), hl
	ld	(iy + 38), de
	ld	(iy + 41), c
	ld	(iy + 42), b
	ld	hl, (ix + 6)
	ld	(ix - 30), hl
	ld	(ix - 27), 121
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_close_window
_core_close_window:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, _.str.2
	push	hl
	push	de
	call	_printf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_destroy_window
_core_destroy_window:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, _.str.3
	push	hl
	push	de
	call	_printf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_show_window
_core_show_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	a, (ix + 9)
	ld.sis	bc, 512
	ld	de, (iy + 43)
	ld	l, e
	ld	h, d
	call	__sand
	bit	0, a
	jr	z, BB6_3
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jr	nz, BB6_6
	ld	l, e
	ld	h, d
	call	__sor
	jr	BB6_5
BB6_3:
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jr	z, BB6_6
	ld.sis	bc, -513
	ld	l, e
	ld	h, d
	call	__sand
BB6_5:
	ld	(iy + 43), l
	ld	(iy + 44), h
	ld	hl, (iy + 19)
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	(iy + 35), hl
	ld	(iy + 38), de
	ld	(iy + 41), c
	ld	(iy + 42), b
BB6_6:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_enable_window
_core_enable_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	a, (ix + 9)
	ld.sis	bc, 128
	ld	de, (iy + 43)
	ld	l, e
	ld	h, d
	call	__sand
	bit	0, a
	jr	z, BB7_3
	ld	a, l
	or	a, a
	jr	nz, BB7_7
	ld	l, e
	ld	h, d
	call	__sor
	ld	(iy + 43), l
	ld	(iy + 44), h
	jr	BB7_6
BB7_3:
	ld	a, l
	or	a, a
	jr	z, BB7_7
	ld.sis	bc, -129
	ld	l, e
	ld	h, d
	call	__sand
	ld	(iy + 43), l
	ld	(iy + 44), h
	ld	hl, (_active_window)
	lea	de, iy
	or	a, a
	sbc	hl, de
	jr	nz, BB7_6
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	call	_core_activate_window
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
BB7_6:
	ld	hl, (iy + 19)
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	(iy + 35), hl
	ld	(iy + 38), de
	ld	(iy + 41), c
	ld	(iy + 42), b
BB7_7:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_activate_window
_core_activate_window:
	call	__frameset0
	ld	iy, (ix + 6)
	bit	0, (ix + 9)
	jr	z, BB8_6
	ld	de, (iy + 43)
	ld	a, e
	bit	7, a
	jp	z, BB8_9
	ld	iy, (_active_window)
	lea	hl, iy
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	jp	z, BB8_9
	ld.sis	bc, 64
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB8_5
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	call	_core_activate_window
	ld.sis	bc, 64
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	de, (iy + 43)
BB8_5:
	ld	l, e
	ld	h, d
	call	__sor
	ld	iy, (ix + 6)
	ld	(iy + 43), l
	ld	(iy + 44), h
	lea	de, iy
	jp	BB8_8
BB8_6:
	ld	hl, (_active_window)
	lea	de, iy
	or	a, a
	sbc	hl, de
	jp	nz, BB8_9
	ld.sis	bc, -65
	ld	de, 0
	ld	hl, (iy + 43)
	call	__sand
	ld	(iy + 43), l
	ld	(iy + 44), h
BB8_8:
	ld	(_active_window), de
	ld	hl, (iy + 19)
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	(iy + 35), hl
	ld	(iy + 38), de
	ld	(iy + 41), c
	ld	(iy + 42), b
BB8_9:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_invalidate_window_rect
_core_invalidate_window_rect:
	ld	hl, -19
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	lea	de, ix - 8
	ld	(ix - 19), de
	push	hl
	pea	iy + 19
	push	de
	call	_core_get_intersect_rect
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 19)
	push	hl
	ld	iy, (ix + 6)
	pea	iy + 35
	pea	ix - 16
	call	_core_get_intersect_rect
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 16)
	ld	de, (ix - 13)
	ld	bc, (ix - 10)
	ld	iy, (ix + 6)
	ld	(iy + 35), hl
	ld	(iy + 38), de
	ld	(iy + 41), c
	ld	(iy + 42), b
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_paint_window
_core_paint_window:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, _.str.6
	ld	hl, (hl)
	push	hl
	push	de
	call	_printf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_exit_app
_core_exit_app:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, _.str.4
	push	hl
	push	de
	call	_printf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_intersect_rect
_core_get_intersect_rect:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 9)
	ld	iy, (ix + 12)
	ld	de, (hl)
	ld	bc, (iy + 4)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	p, BB12_13
	ld	hl, (iy)
	ld	(ix - 9), bc
	push	de
	pop	bc
	ld	iy, (ix + 9)
	ld	de, (iy + 4)
	ld	(ix - 6), hl
	ld	(ix - 3), de
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	jp	p, BB12_13
	ld	iy, (ix + 9)
	ld	hl, (iy + 2)
	ld	iy, (ix + 12)
	ld	de, (iy + 6)
	ld	(ix - 12), hl
	ld	(ix - 15), de
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	jp	p, BB12_13
	ld	hl, (iy + 2)
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	push	hl
	pop	iy
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	jp	p, BB12_13
	ld	(ix - 18), de
	ld	de, (ix - 6)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	m, BB12_6
	ld	c, e
	ld	b, d
BB12_6:
	ld	(ix - 6), bc
	lea	bc, iy
	ld	l, c
	ld	h, b
	ld	de, (ix - 12)
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld	iy, (ix + 6)
	jp	m, BB12_8
	ld	l, c
	ld	h, b
	ld	(ix - 12), hl
BB12_8:
	ld	hl, (ix - 3)
	ld	bc, (ix - 9)
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	ld	de, (ix - 15)
	jp	m, BB12_10
	ld	(ix - 3), bc
BB12_10:
	ld	bc, (ix - 18)
	ld	l, c
	ld	h, b
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld	hl, (ix - 6)
	jp	m, BB12_12
	ld	c, e
	ld	b, d
BB12_12:
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, (ix - 12)
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	hl, (ix - 3)
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	(iy + 6), c
	ld	(iy + 7), b
	jr	BB12_14
BB12_13:
	ld.sis	hl, 0
	ld	iy, (ix + 6)
	ld	de, 0
	ld	(iy), de
	ld	(iy + 3), de
	ld	(iy + 6), l
	ld	(iy + 7), h
BB12_14:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_post_message
_core_post_message:
	call	__frameset0
	ld	e, 0
	ld	a, (_msg_count)
	ld	iyl, a
	cp	a, 64
	jr	nc, BB13_4
	ld	a, (_msg_write_index)
	or	a, a
	sbc	hl, hl
	ld	l, a
	inc	a
	ld	bc, 30
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _message_queue
	add	hl, bc
	cp	a, 64
	jr	nc, BB13_3
	ld	e, a
BB13_3:
	ld	a, e
	ld	(_msg_write_index), a
	ex	de, hl
	ld	hl, (ix + 6)
	ld	bc, 30
	ldir
	inc	iyl
	ld	a, iyl
	ld	(_msg_count), a
BB13_4:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_local_window_rect
_core_get_local_window_rect:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 9)
	lea	de, iy
	ld	hl, (iy + 3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB14_2
	push	de
	pop	iy
	ld	hl, (iy + 19)
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), de
	ld	(iy + 6), c
	ld	(iy + 7), b
	jp	BB14_3
BB14_2:
	ex	de, hl
	ld	iy, (ix + 9)
	ld	hl, (iy + 19)
	push	de
	pop	iy
	ld	bc, (iy + 27)
	ld	(ix - 3), bc
	or	a, a
	sbc.sis	hl, bc
	ld	bc, (ix + 6)
	push	bc
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 21)
	push	de
	pop	iy
	ld	bc, (iy + 29)
	or	a, a
	sbc.sis	hl, bc
	ld	iy, (ix + 6)
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 23)
	ld	de, (ix - 3)
	or	a, a
	sbc.sis	hl, de
	ld	iy, (ix + 6)
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 25)
	ld	iy, (ix + 6)
	or	a, a
	sbc.sis	hl, bc
	ld	(iy + 6), l
	ld	(iy + 7), h
BB14_3:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_key_event_handler
_key_event_handler:
	call	__frameset0
	ld	a, (ix + 8)
	cp	a, 125
	jr	nz, BB15_2
	ld	hl, 1
	push	hl
	call	_exit
	pop	hl
BB15_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_version
_core_get_version:
	ld	a, 1
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_rect_width
_core_get_rect_width:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (iy + 4)
	ld	de, (iy)
	or	a, a
	sbc.sis	hl, de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_rect_height
_core_get_rect_height:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (iy + 6)
	ld	de, (iy + 2)
	or	a, a
	sbc.sis	hl, de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_rect_size
_core_get_rect_size:
	call	__frameset0
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	ld	hl, (iy + 4)
	ld	de, (iy)
	or	a, a
	sbc.sis	hl, de
	push	bc
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 6)
	ld	de, (iy + 2)
	or	a, a
	sbc.sis	hl, de
	push	bc
	pop	iy
	ld	(iy + 2), l
	ld	(iy + 3), h
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_offset_rect
_core_offset_rect:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	bc, (ix + 9)
	ld	de, (ix + 12)
	ld	hl, (iy)
	add.sis	hl, bc
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, (iy + 2)
	add.sis	hl, de
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	hl, (iy + 4)
	add.sis	hl, bc
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	hl, (iy + 6)
	add.sis	hl, de
	ld	(iy + 6), l
	ld	(iy + 7), h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_expand_rect_width
_core_expand_rect_width:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (iy)
	or	a, a
	sbc.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, (iy + 4)
	add.sis	hl, de
	ld	(iy + 4), l
	ld	(iy + 5), h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_expand_rect_height
_core_expand_rect_height:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (iy + 2)
	or	a, a
	sbc.sis	hl, de
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	hl, (iy + 6)
	add.sis	hl, de
	ld	(iy + 6), l
	ld	(iy + 7), h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_expand_rect
_core_expand_rect:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (iy)
	or	a, a
	sbc.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, (iy + 2)
	or	a, a
	sbc.sis	hl, de
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	hl, (iy + 4)
	add.sis	hl, de
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	hl, (iy + 6)
	add.sis	hl, de
	ld	(iy + 6), l
	ld	(iy + 7), h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_expand_rect_unevenly
_core_expand_rect_unevenly:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	hl, (iy)
	or	a, a
	sbc.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, (iy + 2)
	or	a, a
	sbc.sis	hl, bc
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	hl, (iy + 4)
	ld	de, (ix + 15)
	add.sis	hl, de
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	hl, (iy + 6)
	ld	de, (ix + 18)
	add.sis	hl, de
	ld	(iy + 6), l
	ld	(iy + 7), h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_screen_rect
_core_get_screen_rect:
	call	__frameset0
	ld	iy, (ix + 6)
	ld.sis	hl, 0
	ld.sis	de, 640
	ld.sis	bc, 480
	ld	(iy), l
	ld	(iy + 1), h
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	(iy + 4), e
	ld	(iy + 5), d
	ld	(iy + 6), c
	ld	(iy + 7), b
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_empty_rect
_core_get_empty_rect:
	call	__frameset0
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld.sis	de, 0
	ld	(iy), hl
	ld	(iy + 3), hl
	ld	(iy + 6), e
	ld	(iy + 7), d
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_union_rect
_core_get_union_rect:
	call	__frameset0
	ld	hl, (ix + 9)
	ld	iy, (ix + 12)
	ld	de, (hl)
	ld	bc, (iy)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	m, BB27_2
	ld	e, c
	ld	d, b
BB27_2:
	ld	hl, (ix + 6)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	iy, (ix + 9)
	ld	de, (iy + 2)
	ld	iy, (ix + 12)
	ld	bc, (iy + 2)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	m, BB27_4
	ld	e, c
	ld	d, b
BB27_4:
	ld	iy, (ix + 6)
	ld	(iy + 2), e
	ld	(iy + 3), d
	ld	iy, (ix + 9)
	ld	bc, (iy + 4)
	ld	iy, (ix + 12)
	ld	de, (iy + 4)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	m, BB27_6
	ld	c, e
	ld	b, d
BB27_6:
	ld	iy, (ix + 6)
	ld	(iy + 4), c
	ld	(iy + 5), b
	ld	iy, (ix + 9)
	ld	bc, (iy + 6)
	ld	iy, (ix + 12)
	ld	de, (iy + 6)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	m, BB27_8
	ld	c, e
	ld	b, d
BB27_8:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	(iy + 6), c
	ld	(iy + 7), b
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_desktop_window
_core_get_desktop_window:
	ld	hl, (_desktop_window)
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_active_window
_core_get_active_window:
	ld	hl, (_active_window)
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_top_level_window
_core_get_top_level_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld.sis	bc, 1
	ld	de, 0
BB30_1:
	ld	hl, (iy + 43)
	call	__sand
	bit	0, l
	jr	nz, BB30_4
	ld	iy, (iy + 3)
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB30_1
	push	de
	pop	iy
BB30_4:
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_get_new_context_id
_get_new_context_id:
	ld	iy, _next_context_id
	ld	hl, (iy)
	ld	e, l
	ld	d, h
	inc.sis	de
	ld	(iy), e
	ld	(iy + 1), d
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_set_text
_core_set_text:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 9)
	push	hl
	call	_strlen
	ld	iy, (ix + 6)
	push	hl
	pop	bc
	pop	hl
	inc	bc
	ld	hl, (iy + 45)
	ld	e, (iy + 48)
	ld	(ix - 3), bc
	xor	a, a
	call	__lcmpu
	ccf
	sbc	a, a
	inc	a
	ld	hl, (iy + 12)
	bit	0, a
	jr	z, BB32_4
	push	hl
	call	_free
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_malloc
	ld	iy, (ix + 6)
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB32_3
	ld	hl, _.str.1
	ld	(iy + 12), hl
	or	a, a
	sbc	hl, hl
	ld	(iy + 45), hl
	ld	(iy + 48), h
	jr	BB32_5
BB32_3:
	ld	(iy + 12), hl
	ld	de, (ix - 3)
	ld	(iy + 45), de
	ld	(iy + 48), 0
BB32_4:
	ld	de, (ix + 9)
	push	de
	push	hl
	call	_strcpy
	pop	hl
	pop	hl
BB32_5:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_global_window_rect
_core_get_global_window_rect:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	hl, (iy + 19)
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), de
	ld	(iy + 6), c
	ld	(iy + 7), b
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_global_client_rect
_core_get_global_client_rect:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	hl, (iy + 27)
	ld	de, (iy + 30)
	ld	bc, (iy + 33)
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), de
	ld	(iy + 6), c
	ld	(iy + 7), b
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_invalidate_window
_core_invalidate_window:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (iy + 19)
	ld	de, (iy + 22)
	ld	bc, (iy + 25)
	ld	(iy + 35), hl
	ld	(iy + 38), de
	ld	(iy + 41), c
	ld	(iy + 42), b
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_create_window
_core_create_window:
	ld	hl, -39
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB36_5
	ld	hl, (ix + 12)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	z, BB36_5
	ld	hl, (ix + 30)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB36_5
	ld	hl, 1
	ld	de, 49
	push	de
	push	hl
	call	_calloc
	pop	de
	pop	de
	ld	de, 0
	ld	(ix - 33), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB36_5
	lea	hl, ix - 30
	ld	(ix - 36), hl
	call	_vdp_context_save
	ld	iy, _next_context_id
	ld	hl, (iy)
	ld	(ix - 39), hl
	inc.sis	hl
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, 255
	push	hl
	call	_vdp_context_reset
	pop	hl
	ld	hl, (ix + 30)
	push	hl
	ld	hl, (ix - 33)
	push	hl
	call	_core_set_text
	pop	hl
	pop	hl
	ld	iy, (ix - 33)
	ld	hl, (ix + 9)
	ld	(iy + 3), hl
	ld	hl, (ix + 15)
	ld	(iy + 43), l
	ld	(iy + 44), h
	lea	de, iy
	ld	hl, (ix + 6)
	ld	iy, (ix - 33)
	ld	(iy), hl
	ld	hl, (ix + 12)
	push	de
	pop	iy
	ld	(iy + 15), l
	ld	(iy + 16), h
	ld	hl, (ix - 39)
	ld	(iy + 17), l
	ld	(iy + 18), h
	ld	hl, (ix + 24)
	ld	(iy + 23), l
	ld	(iy + 24), h
	ld	hl, (ix + 27)
	ld	(iy + 25), l
	ld	(iy + 26), h
	ld	hl, (ix - 33)
	ld	(ix - 30), hl
	ld	(ix - 27), 122
	ld	hl, (ix - 36)
	push	hl
	call	_core_post_message
	pop	hl
	ld	(ix - 27), 120
	ld	hl, (ix - 36)
	push	hl
	call	_core_post_message
	pop	hl
	ld	hl, (ix + 21)
	push	hl
	ld	hl, (ix + 18)
	push	hl
	ld	hl, (ix - 33)
	push	hl
	call	_core_move_window
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 33)
BB36_5:
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_local_client_rect
_core_get_local_client_rect:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 9)
	lea	de, iy
	ld	hl, (iy + 3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB37_2
	push	de
	pop	iy
	ld	hl, (iy + 27)
	ld	de, (iy + 30)
	ld	bc, (iy + 33)
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), de
	ld	(iy + 6), c
	ld	(iy + 7), b
	jp	BB37_3
BB37_2:
	ex	de, hl
	ld	iy, (ix + 9)
	ld	hl, (iy + 27)
	push	de
	pop	iy
	ld	bc, (iy + 27)
	ld	(ix - 3), bc
	or	a, a
	sbc.sis	hl, bc
	ld	bc, (ix + 6)
	push	bc
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 29)
	push	de
	pop	iy
	ld	bc, (iy + 29)
	or	a, a
	sbc.sis	hl, bc
	ld	iy, (ix + 6)
	ld	(iy + 2), l
	ld	(iy + 3), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 31)
	ld	de, (ix - 3)
	or	a, a
	sbc.sis	hl, de
	ld	iy, (ix + 6)
	ld	(iy + 4), l
	ld	(iy + 5), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 33)
	ld	iy, (ix + 6)
	or	a, a
	sbc.sis	hl, bc
	ld	(iy + 6), l
	ld	(iy + 7), h
BB37_3:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_window_size
_core_get_window_size:
	call	__frameset0
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	ld	hl, (iy + 23)
	ld	de, (iy + 19)
	or	a, a
	sbc.sis	hl, de
	push	bc
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 25)
	ld	de, (iy + 21)
	or	a, a
	sbc.sis	hl, de
	push	bc
	pop	iy
	ld	(iy + 2), l
	ld	(iy + 3), h
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_client_size
_core_get_client_size:
	call	__frameset0
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	ld	hl, (iy + 31)
	ld	de, (iy + 27)
	or	a, a
	sbc.sis	hl, de
	push	bc
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	ld	iy, (ix + 9)
	ld	hl, (iy + 33)
	ld	de, (iy + 29)
	or	a, a
	sbc.sis	hl, de
	push	bc
	pop	iy
	ld	(iy + 2), l
	ld	(iy + 3), h
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_sizing_window_rect
_core_get_sizing_window_rect:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	hl, (iy + 23)
	ld	de, (iy + 19)
	or	a, a
	sbc.sis	hl, de
	ld	c, l
	ld	b, h
	ld	hl, (iy + 25)
	ld	de, (iy + 21)
	or	a, a
	sbc.sis	hl, de
	ld	iy, (ix + 6)
	ld.sis	de, 0
	ld	(iy), e
	ld	(iy + 1), d
	ld	(iy + 2), e
	ld	(iy + 3), d
	ld	(iy + 4), c
	ld	(iy + 5), b
	ld	(iy + 6), l
	ld	(iy + 7), h
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_get_sizing_client_rect
_core_get_sizing_client_rect:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	hl, (iy + 31)
	ld	de, (iy + 27)
	or	a, a
	sbc.sis	hl, de
	ld	c, l
	ld	b, h
	ld	hl, (iy + 33)
	ld	de, (iy + 29)
	or	a, a
	sbc.sis	hl, de
	ld	iy, (ix + 6)
	ld.sis	de, 0
	ld	(iy), e
	ld	(iy + 1), d
	ld	(iy + 2), e
	ld	(iy + 3), d
	ld	(iy + 4), c
	ld	(iy + 5), b
	ld	(iy + 6), l
	ld	(iy + 7), h
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_process_message
_core_process_message:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (iy)
	lea	de, iy
	ld	iy, (hl)
	ld	hl, (iy + 3)
	push	de
	call	__indcallhl
	pop	bc
	call	__lcmpzero
	jr	nz, BB42_6
	ld	hl, (ix + 6)
	ld	iy, (hl)
	ld	hl, (iy + 15)
	dec.sis	hl
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	bc, 9
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	c, BB42_3
	ld	hl, (ix + 6)
	push	hl
	jr	BB42_5
BB42_3:
	ld	bc, (ix + 6)
	ld	hl, JTI42_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB42_4:
	push	bc
BB42_5:
	call	_core_handle_message
	pop	hl
	ld	e, 0
	ld	hl, 1
BB42_6:
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI42_0
JTI42_0:
	dl	BB42_4
	dl	BB42_4
	dl	BB42_4
	dl	BB42_4
	dl	BB42_4
	dl	BB42_4
	dl	BB42_4
	dl	BB42_4
	dl	BB42_4

	section	.text,"ax",@progbits
	public	_core_terminate
_core_terminate:
	ld	hl, _str
	push	hl
	call	_puts
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_initialize
_core_initialize:
	ld	hl, -2
	call	__frameset
	ld.sis	de, 704
	ld.sis	bc, 0
	lea	hl, ix - 2
	ld	(ix - 2), e
	ld	(ix - 1), d
	push	de
	push	de
	push	de
	push	de
	push	de
	push	de
	ld	iy, 0
	add	iy, sp
	ld	a, (hl)
	ld	(iy), a
	ld	a, (ix - 1)
	ld	(iy + 1), a
	ld	(iy + 3), c
	ld	(iy + 4), b
	ld	(iy + 6), c
	ld	(iy + 7), b
	ld.sis	hl, 640
	ld	(iy + 9), l
	ld	(iy + 10), h
	ld.sis	hl, 480
	ld	(iy + 12), l
	ld	(iy + 13), h
	ld	hl, _.str.8
	ld	(iy + 15), hl
	ld	hl, 1
	push	hl
	dec	hl
	push	hl
	ld	hl, _agwin_app
	push	hl
	call	_core_create_window
	ld	iy, 27
	add	iy, sp
	ld	sp, iy
	ld	(_desktop_window), hl
	ld	a, 1
	ld	(_running), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_core_message_loop
_core_message_loop:
	ld	hl, _key_event_handler
	push	hl
	call	_vdp_set_key_event_handler
BB45_1:
	pop	hl
	ld	bc, 30
	ld	a, (_running)
	ld	l, a
	ld	a, (_msg_count)
	ld	e, a
	bit	0, l
	jr	z, BB45_7
	ld	a, e
	or	a, a
	jr	z, BB45_6
	ld	a, (_msg_read_index)
	or	a, a
	sbc	hl, hl
	ld	l, a
	inc	a
	call	__imulu
	push	hl
	pop	bc
	ld	hl, _message_queue
	add	hl, bc
	cp	a, 64
	ld	c, 0
	jr	nc, BB45_5
	ld	c, a
BB45_5:
	ld	a, c
	ld	(_msg_read_index), a
	dec	e
	ld	a, e
	ld	(_msg_count), a
	push	hl
	call	_core_process_message
	jr	BB45_1
BB45_6:
	jr	BB45_6
BB45_7:
	jp	_vdp_key_reset_interrupt
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_desktop_win_msg_handler
_desktop_win_msg_handler:
	call	__frameset0
	ld	hl, (ix + 6)
	push	hl
	call	_core_handle_message
	pop	hl
	ld	hl, 1
	ld	e, h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_resize_window
_aw_resize_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	(ix - 30), hl
	ld	(ix - 27), 2
	ld	(ix - 26), e
	ld	(ix - 25), d
	ld	(ix - 24), c
	ld	(ix - 23), b
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_move_window
_aw_move_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	(ix - 30), hl
	ld	(ix - 27), 3
	ld	(ix - 26), e
	ld	(ix - 25), d
	ld	(ix - 24), c
	ld	(ix - 23), b
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_close_window
_aw_close_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 30), hl
	ld	(ix - 27), 4
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_destroy_window
_aw_destroy_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 30), hl
	ld	(ix - 27), 5
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_show_window
_aw_show_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	and	a, 1
	ld	(ix - 30), hl
	ld	(ix - 27), 6
	ld	(ix - 26), a
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_enable_window
_aw_enable_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	and	a, 1
	ld	(ix - 30), hl
	ld	(ix - 27), 7
	ld	(ix - 26), a
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_activate_window
_aw_activate_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	and	a, 1
	ld	(ix - 30), hl
	ld	(ix - 27), 8
	ld	(ix - 26), a
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_invalidate_window
_aw_invalidate_window:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 30), hl
	ld	(ix - 27), 9
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_invalidate_window_rect
_aw_invalidate_window_rect:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	iy, (ix + 9)
	ld	(ix - 30), hl
	ld	(ix - 27), 10
	ld	hl, (iy)
	ld	de, (iy + 3)
	ld	bc, (iy + 6)
	ld	(ix - 26), hl
	ld	(ix - 23), de
	ld	(ix - 20), c
	ld	(ix - 19), b
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_exit
_aw_exit:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, 0
	ld	(ix - 30), de
	ld	(ix - 27), 13
	ld	(ix - 26), hl
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_terminate
_aw_terminate:
	ld	hl, -30
	call	__frameset
	ld	hl, 0
	ld	(ix - 30), hl
	ld	(ix - 27), 12
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_edit_text_win_msg_handler
_edit_text_win_msg_handler:
	call	__frameset0
	ld	hl, (ix + 6)
	push	hl
	call	_core_handle_message
	pop	hl
	ld	hl, 1
	ld	e, h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_icon_win_msg_handler
_icon_win_msg_handler:
	call	__frameset0
	ld	hl, (ix + 6)
	push	hl
	call	_core_handle_message
	pop	hl
	ld	hl, 1
	ld	e, h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_list_win_msg_handler
_list_win_msg_handler:
	call	__frameset0
	ld	hl, (ix + 6)
	push	hl
	call	_core_handle_message
	pop	hl
	ld	hl, 1
	ld	e, h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_message_box_win_msg_handler
_message_box_win_msg_handler:
	call	__frameset0
	ld	hl, (ix + 6)
	push	hl
	call	_core_handle_message
	pop	hl
	ld	hl, 1
	ld	e, h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_menu_win_msg_handler
_menu_win_msg_handler:
	call	__frameset0
	ld	hl, (ix + 6)
	push	hl
	call	_core_handle_message
	pop	hl
	ld	hl, 1
	ld	e, h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_emit_keyboard_action
_aw_emit_keyboard_action:
	ld	hl, -30
	call	__frameset
	ld	hl, (_active_window)
	ld	(ix - 30), hl
	ld	(ix - 27), 102
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_aw_emit_mouse_action
_aw_emit_mouse_action:
	ld	hl, -30
	call	__frameset
	ld	hl, (_active_window)
	ld	(ix - 30), hl
	ld	(ix - 27), 107
	pea	ix - 30
	call	_core_post_message
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_static_text_win_msg_handler
_static_text_win_msg_handler:
	call	__frameset0
	ld	hl, (ix + 6)
	push	hl
	call	_core_handle_message
	pop	hl
	ld	hl, 1
	ld	e, h
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.data,"aw",@progbits
	public	_next_context_id
_next_context_id:
	dw	32768

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"agwin", 0

	section	.data,"aw",@progbits
	public	_agwin_app
_agwin_app:
	dl	_.str
	dl	_core_handle_message
	dl	0
	dd	0

	section	.bss,"aw",@nobits
	public	_desktop_window
_desktop_window:
	rb	3

	section	.bss,"aw",@nobits
	public	_active_window
_active_window:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	1 dup 0

	section	.bss,"aw",@nobits
	public	_msg_count
_msg_count:
	rb	1

	section	.bss,"aw",@nobits
	public	_message_queue
_message_queue:
	rb	1920

	section	.bss,"aw",@nobits
	public	_msg_write_index
_msg_write_index:
	rb	1

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"close %p", 13, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"destroy %p", 13, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"exit %p", 13, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"paint %p", 13, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"handle %p %hu", 13, 10, 0

	section	.bss,"aw",@nobits
	public	_running
_running:
	rb	1

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"Agon Windows Desktop", 0

	section	.bss,"aw",@nobits
	public	_msg_read_index
_msg_read_index:
	rb	1

	section	.rodata,"a",@progbits
	private	_str
_str:
	db	"terminate", 13, 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	__Unwind_SjLj_Register
	extern	_malloc
	extern	__lcmpzero
	extern	_vdp_context_restore
	extern	__sand
	extern	_vdp_clear_screen
	extern	_strlen
	extern	__setflag
	extern	_printf
	extern	__llshru
	extern	_exit
	extern	_vdp_clear_graphics
	extern	_vdp_key_reset_interrupt
	extern	_vdp_key_init
	extern	__smulu
	extern	_free
	extern	_vdp_cursor_enable
	extern	_vdp_context_save
	extern	_vdp_vdu_init
	extern	_vdp_context_reset
	extern	__frameset
	extern	__indcallhl
	extern	_puts
	extern	_vdp_mode
	extern	__Unwind_SjLj_Unregister
	extern	_strcpy
	extern	__imulu
	extern	_calloc
	extern	__sor
	extern	_vdp_logical_scr_dims
	extern	_vdp_set_key_event_handler
	extern	__lcmpu
	extern	__frameset0
